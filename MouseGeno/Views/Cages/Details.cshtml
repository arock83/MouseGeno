@model MouseGeno.Models.ViewModels.CageDetailsViewModel

<div class="row">
    <div class="col-md-3 container">
        <h3>Cage # @Model.Cage.CageNumber</h3>
        <p>Cubicle: @Model.Cage.Cubicle</p>
        <br />
    </div>
    <div class="col-md-8 container">
        @*DisplayChart*@
        <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
        <div id="chartContainer" style="height: 300px; width: 100%;">
            <script type="text/javascript">
                var data
                window.onload = function () {
                    var chart = new CanvasJS.Chart("chartContainer",
                        {
                            title: {
                                text: "Weight Of Mice in Cage # @Model.Cage.CageNumber (g)"
                            },
                            axisX: {
                                valueFormatString: "DD-MMM",
                                labelAngle: -50
                            },
                            legend: {
                                horizontalAlign: "left",
                                verticalAlign: "center",
                                fontSize: 15
                            },
                            data: [
                            @for (var n = 0; n < Model.MiceInCage.Count(); n++)
                            {

                                <text>
                                {
                                    type: "line",
                                    legendText: "@Model.MiceInCage[@n].EarTag",
                                    showInLegend: true,
                                    dataPoints: [
                                    @if(Model.MiceInCage[@n].MouseTasks != null)
                                    {
                                        @foreach(MouseTask task in Model.MiceInCage[@n].MouseTasks)
                                        {

                                            <text>
                                            { x: new Date(@task.Date.Year , @task.Date.Month , @task.Date.Day) , y: @task.Data }
                                            </text>
                                            @if(task != Model.MiceInCage[@n].MouseTasks.Last())
                                            {
                                                <text>,</text>

                                            }
                                            
                                            
                                        }
                                    }

                                    ]
                                }
                                @if(n < Model.MiceInCage.Count() - 1)
                                    {
                                        <text>,</text>
                                    }
                                </text>
                            }

                            ]
                        });

                    chart.render();
                }
            </script>  
        </div>
    </div>
</div>
<h4>Current Mice</h4>
<table class="table">
    <thead>
        <tr>
            <th>
                EarTag
            </th>
            <th>
                ToeClip
            </th>
            <th>
                Sex
            </th>
            <th>
                Birth
            </th>
            <th>
                Mom
            </th>
            <th>
                Dad
            </th>
            <th>
                PK1
            </th>
            <th>
                PK2
            </th>
            <th>
                SynCre
            </th>
            <th>
                Line
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (Mouse mouse in Model.MiceInCage)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => mouse.EarTag)
                </td>
                <td>
                    @if (mouse.ToeClip == null)
                    {
                        <a asp-controller="Mice" asp-action="Edit" asp-route-id="mouse.MouseID">[Assign]</a>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => mouse.ToeClip)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => mouse.Sex)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => mouse.Birth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => mouse.Mom.EarTag)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => mouse.Dad.EarTag)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => mouse.PK1.ShortHand)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => mouse.PK2.ShortHand)
                </td>
                <td>
                    @if (mouse.SynCre == true)
                    {
                        <p> + </p>
                    }
                    else if (mouse.SynCre == false)
                    {
                        <p> - </p>
                    }
                    else
                    {
                        <p> </p>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => mouse.Line.Name)
                </td>

                <td>
                    <a asp-controller="Mice" asp-action="Edit" asp-route-id="@mouse.MouseID">Edit</a> |
                    <a asp-controller="Mice" asp-action="Details" asp-route-id="@mouse.MouseID">Details</a> |
                    <a asp-controller="Mice" asp-action="Delete" asp-route-id="@mouse.MouseID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="container">
    <h4>Actions</h4>
    
    @if(Model.Cage.Breeding == true && Model.MiceInCage.Where(m => m.Sex == "F").Count() > 0 && Model.MiceInCage.Where(m => m.Sex == "M").Count() > 0)
    {
        <form>
            <select name="numOfPups">
                <option value="1" name="numOfPups">1</option>
                <option value="2" name="numOfPups">2</option>
                <option value="3" name="numOfPups">3</option>
                <option value="4" name="numOfPups">4</option>
                <option value="5" name="numOfPups">5</option>
                <option value="6" name="numOfPups">6</option>
                <option value="7" name="numOfPups">7</option>
                <option value="8" name="numOfPups">8</option>
                <option value="9" name="numOfPups">9</option>
                <option value="10" name="numOfPups">10</option>
            </select>
            <input type="hidden" value="@Model.Cage.CageID" name="cageID"/>
            <input type="submit" asp-controller="Mice" asp-action="NewLitter" value="New Litter Born"/>
        </form>
    }
    <br />
    @if(Model.MiceInCage.Count() > 0)
    {
        <div class="container row"> 
            @foreach(TaskType task in Model.Actions)
            {
                <div class="col-md-2 container">
                    <form>
                        <input type="hidden" value="@Model.Cage.CageID" name="cageID"/>
                        <input type="hidden" value="@task.TaskTypeID" name="taskID" />
                        <input type="submit" asp-controller="TaskTypes" asp-action="TaskOnCage" value="@task.Name" />
                    </form>
                </div>
            }
        </div>
    }

</div>
